{"version":3,"file":"index.js","sources":["../src/Rating.js","../src/Stars.js","../src/Score.js","../src/Histogram.js","../src/theme.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\n\nimport { Score, Histogram } from '.'\n\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n    padding: theme.padding\n  }\n})\n\nconst Rating = ({ values = [], classes }) => {\n  return (\n    <div className={classes.root}>\n      <Score values={values} />\n      <Histogram values={values} />\n    </div>\n  )\n}\n\nRating.propTypes = {\n  values: PropTypes.arrayOf(PropTypes.number),\n  classes: PropTypes.object.isRequired\n}\n\nexport default injectSheet(styles)(Rating)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nexport const styles = theme => ({\n  root: {\n    display: 'inline-block',\n    position: 'relative'\n  },\n  back: {\n    color: theme.palette.shadedStar\n  },\n  front: {\n    color: theme.palette.twinklingStar,\n    left: 0,\n    overflow: 'hidden',\n    position: 'absolute'\n  },\n  star: {\n    fontSize: 18,\n    padding: 3,\n    '&:before': {\n      content: '\"★\"'\n    }\n  }\n})\n\nconst Stars = ({ value, max = 5, classes }) => {\n  const percent = 100 * value / max\n  const stars = [...Array(max)].map((dummy, index) => (\n    <span key={index} className={classes.star} />\n  ))\n  return (\n    <div className={classes.root}>\n      <span className={classes.back}>{stars}</span>\n      <span className={classes.front} style={{ maxWidth: `${percent}%` }}>\n        {stars}\n      </span>\n    </div>\n  )\n}\n\nStars.propTypes = {\n  value: PropTypes.number,\n  max: PropTypes.number,\n  classes: PropTypes.object.isRequired\n}\n\nexport default injectSheet(styles)(Stars)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\n\nimport Stars from './Stars'\n\nexport const styles = theme => ({\n  root: {\n    display: 'inline-block',\n    position: 'relative',\n    textAlign: 'center'\n  },\n  score: {\n    color: theme.palette.gray2,\n    fontSize: 64,\n    fontWeight: 100,\n    lineHeight: '64px',\n    paddingTop: 3\n  },\n  stars: {\n    marginBottom: 8,\n    overflow: 'auto',\n    position: 'relative'\n  },\n  total: {\n    color: theme.palette.gray3,\n    fontSize: 12,\n    fontWeight: 300,\n    marginTop: 10\n  }\n})\n\nconst Score = ({ values = [], classes }) => {\n  const total = values.reduce((a, b) => a + b, 0)\n  const average = total\n    ? values.reduce((a, b, index) => a + b * (index + 1), 0) / total\n    : null\n  const score = Math.round(average * 10) / 10\n  return (\n    <div className={classes.root}>\n      <div className={classes.score}>{score.toLocaleString()}</div>\n      <Stars value={average} max={values.length} />\n      <div className={classes.total}>{total.toLocaleString()} total</div>\n    </div>\n  )\n}\n\nScore.propTypes = {\n  values: PropTypes.arrayOf(PropTypes.number),\n  classes: PropTypes.object.isRequired\n}\n\nexport default injectSheet(styles)(Score)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\n\nexport const styles = theme => {\n  const styles = {\n    root: {\n      marginLeft: theme.padding\n    },\n    label: {\n      color: theme.palette.gray2,\n      fontSize: 11,\n      fontWeight: 400,\n      paddingRight: 10,\n      '&:before': {\n        content: '\"★\"',\n        marginRight: 4\n      }\n    },\n    outer: {\n      display: 'inline-block',\n      width: 120,\n      '@media (min-width: 600px)': {\n        width: 375\n      }\n    },\n    inner: {\n      background: theme.palette.gray4,\n      color: theme.palette.gray1,\n      display: 'inline-block',\n      fontSize: 11,\n      fontWeight: 400,\n      lineHeight: '23px',\n      marginBottom: 1,\n      boxSizing: 'border-box',\n      width: 0\n    },\n    value: {\n      marginLeft: 5\n    }\n  }\n\n  // adding histogram colors\n  Object.keys(theme.palette.histogram).forEach(key => {\n    styles[`bar${key}`] = {\n      background: theme.palette.histogram[key]\n    }\n  })\n\n  return styles\n}\n\nconst HistogramBar = ({ name, value = null, maxValue = 0, classes }) => {\n  const percent = maxValue ? 100 * value / maxValue : 0\n  return (\n    <div>\n      <span className={classes.label}>{name}</span>\n      <span className={classes.outer}>\n        <span\n          className={`${classes.inner} ${classes[`bar${name}`]}`}\n          style={{ width: `${percent}%` }}\n        >\n          <span className={classes.value}>{value.toLocaleString()}</span>\n        </span>\n      </span>\n    </div>\n  )\n}\n\n/*\n @wtf JSS generates faulty css class names for Pseudo-elements if \"Histogram\" is used\n*/\nconst HistogramWTF = ({ values, classes }) => {\n  const maxValue = Math.max(...values)\n  return (\n    <div className={classes.root}>\n      {values.reverse().map((value, index) => {\n        return (\n          <HistogramBar\n            key={index}\n            name={values.length - index}\n            value={value}\n            maxValue={maxValue}\n            classes={classes}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nHistogramWTF.propTypes = {\n  values: PropTypes.arrayOf(PropTypes.number),\n  classes: PropTypes.object.isRequired\n}\n\nexport default injectSheet(styles)(HistogramWTF)\n","export default {\n  palette: {\n    histogram: {\n      '1': '#fc8c63',\n      '2': '#fdb154',\n      '3': '#fed759',\n      '4': '#b1d553',\n      '5': '#a2bf63'\n    },\n    shadedStar: '#b1b1b1',\n    twinklingStar: '#737373',\n    gray1: '#333333',\n    gray2: '#737373',\n    gray3: '#8d8d8d',\n    gray4: '#d9d9d9'\n  },\n  padding: 24\n}\n"],"names":["styles","theme","padding","Rating","values","classes","root","Score","Histogram","propTypes","PropTypes","arrayOf","number","object","isRequired","injectSheet","palette","shadedStar","twinklingStar","Stars","value","max","percent","stars","Array","map","dummy","index","star","back","front","maxWidth","gray2","gray3","total","reduce","a","b","average","score","Math","round","toLocaleString","length","gray4","gray1","Object","keys","histogram","forEach","key","HistogramBar","name","maxValue","label","outer","inner","width","HistogramWTF","reverse"],"mappings":"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"}